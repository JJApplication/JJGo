swagger: "2.0"
info:
  description: "This is a Restful API server by Renj.io. Generated by [http://swagger.io](http://swagger.io). JJgo is written in Go and serving all the JJ's APPs. Learn more at [JJService](http://app.renj.io)"
  version: "1.0.0"
  title: "JJGo Rest API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mail@renj.io"
host: "api.renj.io"
basePath: "/rest"
tags:
  - name: "jjgo"
    description: "API for JJGo"
    externalDocs:
      description: "Find out more"
      url: "http://api.renj.io"
  - name: "jjmail"
    description: "API for JJMail(auto mail service)"
  - name: "jjbox"
    description: "API for JJBox"
  - name: "blog"
    description: "API for Vue Blog"
    externalDocs:
      description: "Find out more about blog"
      url: "http://blog.renj.io"
schemes:
  - "https"
  - "http"
paths:
  /jjgo:
    get:
      tags:
        - "jjgo"
      summary: "jjgo api info"
      description: "jjgo入口"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjgo/pub:
    get:
      tags:
        - "jjgo"
      summary: "jjgo public test"
      description: "jjgo公共测试接口"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjgo/status:
    get:
      tags:
        - "jjgo"
      summary: "jjgo status"
      description: "jjgo状态信息"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/status"
  /jjmail:
    get:
      tags:
        - "jjmail"
      summary: "jjmail info"
      description: "jjmail入口"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjmail/status:
    get:
      tags:
        - "jjmail"
      summary: "jjmail status"
      description: "jjmail运行状态"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/status"
  /jjmail/send:
    post:
      tags:
        - "jjmail"
      summary: "jjmail send mail"
      description: "jjmail发送邮件"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 根据收件邮箱地址和所选服务名添加任务
          required: true
          schema:
            type: "object"
            properties:
              mail_address:
                type: "string"
                description: "收件人地址"
              service:
                type: "string"
                description: "所选服务模块"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjmail/sub:
    put:
      tags:
        - "jjmail"
      summary: "jjmail subscribe"
      description: "jjmail订阅邮件"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 根据收件邮箱地址和所选服务名添加任务
          required: true
          schema:
            type: "object"
            properties:
              mail_address:
                type: "string"
                description: "收件人地址"
              service:
                type: "string"
                description: "所选服务模块"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjmail/unsub:
    delete:
      tags:
        - "jjmail"
      summary: "jjmail unsubscribe"
      description: "jjmail取消订阅"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 根据收件邮箱地址和所选服务名添加任务
          required: true
          schema:
            type: "object"
            properties:
              mail_address:
                type: "string"
                description: "收件人地址"
              service:
                type: "string"
                description: "所选服务模块"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjbox:
    get:
      tags:
        - "jjbox"
      summary: "jjbox info"
      description: "jjbox入口"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjbox/list:
    get:
      tags:
        - "jjbox"
      summary: "jjbox list all files"
      description: "jjbox列出全部文件"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 根据名称模糊查询返回结果
          required: false
          schema:
            type: "object"
            properties:
              file:
                type: "string"
                description: "收件人地址"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjbox/upload:
    put:
      tags:
        - "jjbox"
      summary: "jjbox upload files"
      description: "jjbox上传文件"
      consumes:
        - "binary"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 文件
          required: false
          schema:
            type: "object"
            properties:
              file:
                type: "object"
                description: "二进制文件"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
  /jjbox/delete:
    delete:
      tags:
        - "jjbox"
      summary: "jjbox delete files"
      description: "jjbox列出全部文件"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          description: 根据HASH值精准查询返回结果
          required: false
          schema:
            type: "object"
            properties:
              file:
                type: "string"
                description: "文件名称"
      responses:
        "200":
          description: "success response"
          schema:
            $ref: "#/definitions/ApiResponse"
definitions:
  status:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      msg:
        type: "string"
      data:
        type: "string"
        description: "status"
        enum:
          - "running"
          - "dead"
    xml:
      name: "status"
  demo:
    type: "object"
    properties:
      rest:
        type: "object"
      file:
        type: "object"
      html:
        type: "object"
    xml:
      name: "demo"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        default: 200
        format: "int32"
        description: "HTTP status code"
      time:
        type: "string"
        default: "1000ms"
        description: "time latency"
      mes:
        type: "string"
        description: "response message"
      data:
        type: "object"
        description: "result data"
  Unauthorization:
    type: "object"
    properties:
      code:
        type: "integer"
        default: "407"
      time:
        type: "string"
        default: "1000ms"
        description: "time latency"
      mes:
        type: "string"
        description: "token unauthorized."
      data:
        type: "object"
        description: "result data"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"